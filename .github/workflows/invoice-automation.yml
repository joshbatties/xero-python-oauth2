name: Invoice Automation

on:
  schedule:
    # Runs at 7:10 AM Melbourne time (21:10 UTC previous day)
    - cron: '10 21 * * *'
  workflow_dispatch:  # Allows manual trigger

jobs:
  create-invoices:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install numpy==1.24.3
        pip install pandas==1.5.3
        pip install -r requirements.txt

    - name: Create and verify credentials
      run: |
        # Create credentials.json with proper formatting
        echo '${{ secrets.GOOGLE_CREDENTIALS }}' | python -c "
        import json, sys
        print(json.dumps(json.loads(sys.stdin.read()), indent=2))
        " > credentials.json
        
        # Verify credentials file
        echo "Verifying credentials.json format..."
        python -c "
        import json
        import sys
        try:
            with open('credentials.json', 'r') as f:
                creds = json.load(f)
                required_keys = ['type', 'project_id', 'private_key', 'client_email']
                missing_keys = [key for key in required_keys if key not in creds]
                if missing_keys:
                    print(f'Error: Missing required keys: {missing_keys}')
                    sys.exit(1)
                print('JSON format is valid')
                print('Required keys present:', required_keys)
                print('Service account email:', creds['client_email'])
        except json.JSONDecodeError as e:
            print(f'Invalid JSON format: {str(e)}')
            sys.exit(1)
        except Exception as e:
            print(f'Error: {str(e)}')
            sys.exit(1)
        "

    - name: Run invoice creation
      env:
        XERO_CLIENT_ID: ${{ secrets.XERO_CLIENT_ID }}
        XERO_CLIENT_SECRET: ${{ secrets.XERO_CLIENT_SECRET }}
        GOOGLE_SHEETS_SPREADSHEET_ID: ${{ secrets.GOOGLE_SHEETS_SPREADSHEET_ID }}
      run: python app.py

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: execution-logs
        path: |
          invoice_automation.log
          *.log
        retention-days: 7